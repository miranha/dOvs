
state 0:

	program : . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	program	goto 176
	exp	goto 14
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 1:

	exp : forexp .  (reduce by rule 11)



	.	reduce by rule 11


state 2:

	exp : whileexp .  (reduce by rule 12)



	.	reduce by rule 12


state 3:

	exp : ifelseexp .  (reduce by rule 14)



	.	reduce by rule 14


state 4:

	exp : ifexp .  (reduce by rule 13)



	.	reduce by rule 13


state 5:

	exp : unaryop .  (reduce by rule 6)



	.	reduce by rule 6


state 6:

	exp : binop .  (reduce by rule 7)



	.	reduce by rule 7


state 7:

	exp : letexp .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : seqexp .  (reduce by rule 5)



	.	reduce by rule 5


state 9:

	exp : assignment .  (reduce by rule 9)



	.	reduce by rule 9


state 10:

	exp : reccreate .  (reduce by rule 16)



	.	reduce by rule 16


state 11:

	exp : arrcreate .  (reduce by rule 15)



	.	reduce by rule 15


state 12:

	exp : callexp .  (reduce by rule 8)



	.	reduce by rule 8


state 13:

	exp : lvalue .  (reduce by rule 10)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 26


	.	reduce by rule 10


state 14:

	program : exp .  (reduce by rule 0)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 0


state 15:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 16:

	exp : BREAK .  (reduce by rule 4)



	.	reduce by rule 4


state 17:

	letexp : LET . deccon IN seqsexps END 

	FUNCTION	shift 51
	VAR	shift 50
	TYPE	shift 49

	deccon	goto 48
	tydec	goto 47
	vardec	goto 46
	fundec	goto 45
	fundeclbegin	goto 44
	tydeclbegin	goto 43
	vardeclbegin	goto 42
	fundeclist	goto 41
	tydeclist	goto 40

	.	error


state 18:

	forexp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 52


	.	error


state 19:

	whileexp : WHILE . exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 53
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 20:

	ifexp : IF . exp THEN exp 
	ifelseexp : IF . exp THEN exp ELSE exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 54
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 21:

	unaryop : MINUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 55
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 22:

	seqexp : LPAREN . seqsexps RPAREN 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 57
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	seqsexps	goto 56
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	reduce by rule 35


state 23:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 24:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 25:

	lvalue : ID . ltail 
	callexp : ID . LPAREN callexpcon RPAREN 
	arrcreate : ID . LBRACK exp RBRACK OF exp 
	reccreate : ID . LBRACE reccreatecon RBRACE 
	reccreate : ID . LBRACE RBRACE 

	LPAREN	shift 64
	LBRACK	shift 63
	LBRACE	shift 62
	DOT	shift 61

	subscript	goto 60
	fieldexp	goto 59
	ltail	goto 58

	.	reduce by rule 60


state 26:

	assignment : lvalue ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 65
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 27:

	binop : exp OR . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 66
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 28:

	binop : exp AND . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 67
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 29:

	binop : exp CARET . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 68
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 30:

	binop : exp GE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 69
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 31:

	binop : exp GT . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 70
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 32:

	binop : exp LE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 71
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 33:

	binop : exp LT . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 72
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 34:

	binop : exp NEQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 73
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 35:

	binop : exp EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 74
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 36:

	binop : exp DIVIDE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 75
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 37:

	binop : exp TIMES . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 76
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 38:

	binop : exp MINUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 77
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 39:

	binop : exp PLUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 78
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 40:

	tydeclbegin : tydeclist .  (reduce by rule 80)
	tydeclbegin : tydeclist . vardeclbegin 
	tydeclbegin : tydeclist . fundeclbegin 

	FUNCTION	shift 51
	VAR	shift 50

	vardec	goto 46
	fundec	goto 45
	fundeclbegin	goto 80
	vardeclbegin	goto 79
	fundeclist	goto 41

	.	reduce by rule 80


state 41:

	fundeclbegin : fundeclist .  (reduce by rule 73)
	fundeclbegin : fundeclist . tydeclbegin 
	fundeclbegin : fundeclist . vardeclbegin 

	VAR	shift 50
	TYPE	shift 49

	tydec	goto 47
	vardec	goto 46
	tydeclbegin	goto 82
	vardeclbegin	goto 81
	tydeclist	goto 40

	.	reduce by rule 73


state 42:

	deccon : vardeclbegin .  (reduce by rule 71)



	.	reduce by rule 71


state 43:

	deccon : tydeclbegin .  (reduce by rule 72)



	.	reduce by rule 72


state 44:

	deccon : fundeclbegin .  (reduce by rule 70)



	.	reduce by rule 70


state 45:

	fundeclist : fundec .  (reduce by rule 83)
	fundeclist : fundec . fundeclist 

	FUNCTION	shift 51

	fundec	goto 45
	fundeclist	goto 83

	.	reduce by rule 83


state 46:

	vardeclbegin : vardec .  (reduce by rule 76)
	vardeclbegin : vardec . fundeclbegin 
	vardeclbegin : vardec . tydeclbegin 
	vardeclbegin : vardec . vardeclbegin 

	FUNCTION	shift 51
	VAR	shift 50
	TYPE	shift 49

	tydec	goto 47
	vardec	goto 46
	fundec	goto 45
	fundeclbegin	goto 86
	tydeclbegin	goto 85
	vardeclbegin	goto 84
	fundeclist	goto 41
	tydeclist	goto 40

	.	reduce by rule 76


state 47:

	tydeclist : tydec .  (reduce by rule 85)
	tydeclist : tydec . tydeclist 

	TYPE	shift 49

	tydec	goto 47
	tydeclist	goto 87

	.	reduce by rule 85


state 48:

	letexp : LET deccon . IN seqsexps END 

	IN	shift 88


	.	error


state 49:

	tydec : TYPE . ID EQ ty 

	ID	shift 89


	.	error


state 50:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 90


	.	error


state 51:

	fundec : FUNCTION . ID LPAREN fielddeccontent RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN fielddeccontent RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN RPAREN EQ exp 

	ID	shift 91


	.	error


state 52:

	forexp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 92


	.	error


state 53:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	whileexp : WHILE exp . DO exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 93


	.	error


state 54:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	ifexp : IF exp . THEN exp 
	ifelseexp : IF exp . THEN exp ELSE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 94


	.	error


state 55:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	unaryop : MINUS exp .  (reduce by rule 31)

	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29


	.	reduce by rule 31


state 56:

	seqexp : LPAREN seqsexps . RPAREN 

	RPAREN	shift 95


	.	error


state 57:

	seqsexps : exp .  (reduce by rule 33)
	seqsexps : exp . SEMICOLON nEmptySeq 
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	SEMICOLON	shift 96
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 33


state 58:

	lvalue : ID ltail .  (reduce by rule 57)



	.	reduce by rule 57


state 59:

	ltail : fieldexp . ltail 

	LBRACK	shift 98
	DOT	shift 61

	subscript	goto 60
	fieldexp	goto 59
	ltail	goto 97

	.	reduce by rule 60


state 60:

	ltail : subscript . ltail 

	LBRACK	shift 98
	DOT	shift 61

	subscript	goto 60
	fieldexp	goto 59
	ltail	goto 99

	.	reduce by rule 60


state 61:

	fieldexp : DOT . ID 

	ID	shift 100


	.	error


state 62:

	reccreate : ID LBRACE . reccreatecon RBRACE 
	reccreate : ID LBRACE . RBRACE 

	ID	shift 104
	RBRACE	shift 103

	reccreatecon	goto 102
	fieldcreate	goto 101

	.	error


state 63:

	subscript : LBRACK . exp RBRACK 
	arrcreate : ID LBRACK . exp RBRACK OF exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 105
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 64:

	callexp : ID LPAREN . callexpcon RPAREN 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 107
	lvalue	goto 13
	callexp	goto 12
	callexpcon	goto 106
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	reduce by rule 41


state 65:

	assignment : lvalue ASSIGN exp .  (reduce by rule 42)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 42


state 66:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp OR exp .  (reduce by rule 24)
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28


	.	reduce by rule 24


state 67:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp AND exp .  (reduce by rule 23)
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29


	.	reduce by rule 23


state 68:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp CARET exp .  (reduce by rule 22)
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	CARET	shift 29


	.	reduce by rule 22


state 69:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	binop : exp GE exp .  (reduce by rule 30)

	EOF	reduce by rule 30
	COMMA	reduce by rule 30
	SEMICOLON	reduce by rule 30
	RPAREN	reduce by rule 30
	RBRACK	reduce by rule 30
	RBRACE	reduce by rule 30
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29
	AND	reduce by rule 30
	OR	reduce by rule 30
	THEN	reduce by rule 30
	ELSE	reduce by rule 30
	TO	reduce by rule 30
	DO	reduce by rule 30
	IN	reduce by rule 30
	END	reduce by rule 30
	FUNCTION	reduce by rule 30
	VAR	reduce by rule 30
	TYPE	reduce by rule 30


	.	error


state 70:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp GT exp .  (reduce by rule 29)
	binop : exp . GE exp 

	EOF	reduce by rule 29
	COMMA	reduce by rule 29
	SEMICOLON	reduce by rule 29
	RPAREN	reduce by rule 29
	RBRACK	reduce by rule 29
	RBRACE	reduce by rule 29
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29
	AND	reduce by rule 29
	OR	reduce by rule 29
	THEN	reduce by rule 29
	ELSE	reduce by rule 29
	TO	reduce by rule 29
	DO	reduce by rule 29
	IN	reduce by rule 29
	END	reduce by rule 29
	FUNCTION	reduce by rule 29
	VAR	reduce by rule 29
	TYPE	reduce by rule 29


	.	error


state 71:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp LE exp .  (reduce by rule 28)
	binop : exp . GT exp 
	binop : exp . GE exp 

	EOF	reduce by rule 28
	COMMA	reduce by rule 28
	SEMICOLON	reduce by rule 28
	RPAREN	reduce by rule 28
	RBRACK	reduce by rule 28
	RBRACE	reduce by rule 28
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29
	AND	reduce by rule 28
	OR	reduce by rule 28
	THEN	reduce by rule 28
	ELSE	reduce by rule 28
	TO	reduce by rule 28
	DO	reduce by rule 28
	IN	reduce by rule 28
	END	reduce by rule 28
	FUNCTION	reduce by rule 28
	VAR	reduce by rule 28
	TYPE	reduce by rule 28


	.	error


state 72:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp LT exp .  (reduce by rule 27)
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	EOF	reduce by rule 27
	COMMA	reduce by rule 27
	SEMICOLON	reduce by rule 27
	RPAREN	reduce by rule 27
	RBRACK	reduce by rule 27
	RBRACE	reduce by rule 27
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29
	AND	reduce by rule 27
	OR	reduce by rule 27
	THEN	reduce by rule 27
	ELSE	reduce by rule 27
	TO	reduce by rule 27
	DO	reduce by rule 27
	IN	reduce by rule 27
	END	reduce by rule 27
	FUNCTION	reduce by rule 27
	VAR	reduce by rule 27
	TYPE	reduce by rule 27


	.	error


state 73:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp NEQ exp .  (reduce by rule 26)
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 74:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp EQ exp .  (reduce by rule 25)
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 75:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp DIVIDE exp .  (reduce by rule 21)
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	CARET	shift 29


	.	reduce by rule 21


state 76:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp TIMES exp .  (reduce by rule 20)
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	CARET	shift 29


	.	reduce by rule 20


state 77:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp MINUS exp .  (reduce by rule 19)
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29


	.	reduce by rule 19


state 78:

	binop : exp . PLUS exp 
	binop : exp PLUS exp .  (reduce by rule 18)
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	TIMES	shift 37
	DIVIDE	shift 36
	CARET	shift 29


	.	reduce by rule 18


state 79:

	tydeclbegin : tydeclist vardeclbegin .  (reduce by rule 81)



	.	reduce by rule 81


state 80:

	tydeclbegin : tydeclist fundeclbegin .  (reduce by rule 82)



	.	reduce by rule 82


state 81:

	fundeclbegin : fundeclist vardeclbegin .  (reduce by rule 75)



	.	reduce by rule 75


state 82:

	fundeclbegin : fundeclist tydeclbegin .  (reduce by rule 74)



	.	reduce by rule 74


state 83:

	fundeclist : fundec fundeclist .  (reduce by rule 84)



	.	reduce by rule 84


state 84:

	vardeclbegin : vardec vardeclbegin .  (reduce by rule 79)



	.	reduce by rule 79


state 85:

	vardeclbegin : vardec tydeclbegin .  (reduce by rule 78)



	.	reduce by rule 78


state 86:

	vardeclbegin : vardec fundeclbegin .  (reduce by rule 77)



	.	reduce by rule 77


state 87:

	tydeclist : tydec tydeclist .  (reduce by rule 86)



	.	reduce by rule 86


state 88:

	letexp : LET deccon IN . seqsexps END 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 57
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	seqsexps	goto 108
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	reduce by rule 35


state 89:

	tydec : TYPE ID . EQ ty 

	EQ	shift 109


	.	error


state 90:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 111
	ASSIGN	shift 110


	.	error


state 91:

	fundec : FUNCTION ID . LPAREN fielddeccontent RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN fielddeccontent RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN RPAREN EQ exp 

	LPAREN	shift 112


	.	error


state 92:

	forexp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 113
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 93:

	whileexp : WHILE exp DO . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 114
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 94:

	ifexp : IF exp THEN . exp 
	ifelseexp : IF exp THEN . exp ELSE exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 115
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 95:

	seqexp : LPAREN seqsexps RPAREN .  (reduce by rule 32)



	.	reduce by rule 32


state 96:

	seqsexps : exp SEMICOLON . nEmptySeq 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 117
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	nEmptySeq	goto 116
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 97:

	ltail : fieldexp ltail .  (reduce by rule 59)



	.	reduce by rule 59


state 98:

	subscript : LBRACK . exp RBRACK 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 118
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 99:

	ltail : subscript ltail .  (reduce by rule 58)



	.	reduce by rule 58


state 100:

	fieldexp : DOT ID .  (reduce by rule 62)



	.	reduce by rule 62


state 101:

	reccreatecon : fieldcreate .  (reduce by rule 66)
	reccreatecon : fieldcreate . COMMA reccreatecon 

	COMMA	shift 119


	.	reduce by rule 66


state 102:

	reccreate : ID LBRACE reccreatecon . RBRACE 

	RBRACE	shift 120


	.	error


state 103:

	reccreate : ID LBRACE RBRACE .  (reduce by rule 65)



	.	reduce by rule 65


state 104:

	fieldcreate : ID . EQ exp 

	EQ	shift 121


	.	error


state 105:

	subscript : LBRACK exp . RBRACK 
	arrcreate : ID LBRACK exp . RBRACK OF exp 
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	RBRACK	shift 122
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 106:

	callexp : ID LPAREN callexpcon . RPAREN 

	RPAREN	shift 123


	.	error


state 107:

	callexpcon : exp .  (reduce by rule 39)
	callexpcon : exp . COMMA callexpcon 
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	COMMA	shift 124
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 39


state 108:

	letexp : LET deccon IN seqsexps . END 

	END	shift 125


	.	error


state 109:

	tydec : TYPE ID EQ . ty 

	ID	shift 131
	LBRACE	shift 130
	ARRAY	shift 129

	ty	goto 128
	arrty	goto 127
	recty	goto 126

	.	error


state 110:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 132
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 111:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 133


	.	error


state 112:

	fundec : FUNCTION ID LPAREN . fielddeccontent RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . fielddeccontent RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . RPAREN EQ exp 

	ID	shift 137
	RPAREN	shift 136

	fielddec	goto 135
	fielddeccontent	goto 134

	.	error


state 113:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	forexp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 138


	.	error


state 114:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	whileexp : WHILE exp DO exp .  (reduce by rule 44)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 44


state 115:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	ifexp : IF exp THEN exp .  (reduce by rule 45)
	ifelseexp : IF exp THEN exp . ELSE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 139


	.	reduce by rule 45


state 116:

	seqsexps : exp SEMICOLON nEmptySeq .  (reduce by rule 34)



	.	reduce by rule 34


state 117:

	nEmptySeq : exp . SEMICOLON nEmptySeq 
	nEmptySeq : exp .  (reduce by rule 37)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	SEMICOLON	shift 140
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 37


state 118:

	subscript : LBRACK exp . RBRACK 
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	RBRACK	shift 141
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 119:

	reccreatecon : fieldcreate COMMA . reccreatecon 

	ID	shift 104

	reccreatecon	goto 142
	fieldcreate	goto 101

	.	error


state 120:

	reccreate : ID LBRACE reccreatecon RBRACE .  (reduce by rule 64)



	.	reduce by rule 64


state 121:

	fieldcreate : ID EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 143
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 122:

	subscript : LBRACK exp RBRACK .  (reduce by rule 61)
	arrcreate : ID LBRACK exp RBRACK . OF exp 

	OF	shift 144


	.	reduce by rule 61


state 123:

	callexp : ID LPAREN callexpcon RPAREN .  (reduce by rule 38)



	.	reduce by rule 38


state 124:

	callexpcon : exp COMMA . callexpcon 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 107
	lvalue	goto 13
	callexp	goto 12
	callexpcon	goto 145
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	reduce by rule 41


state 125:

	letexp : LET deccon IN seqsexps END .  (reduce by rule 69)



	.	reduce by rule 69


state 126:

	ty : recty .  (reduce by rule 50)



	.	reduce by rule 50


state 127:

	ty : arrty .  (reduce by rule 49)



	.	reduce by rule 49


state 128:

	tydec : TYPE ID EQ ty .  (reduce by rule 47)



	.	reduce by rule 47


state 129:

	arrty : ARRAY . OF ID 

	OF	shift 146


	.	error


state 130:

	recty : LBRACE . fielddeccontent RBRACE 
	recty : LBRACE . RBRACE 

	ID	shift 137
	RBRACE	shift 148

	fielddec	goto 135
	fielddeccontent	goto 147

	.	error


state 131:

	ty : ID .  (reduce by rule 48)



	.	reduce by rule 48


state 132:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 91)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 91


state 133:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 149


	.	error


state 134:

	fundec : FUNCTION ID LPAREN fielddeccontent . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN fielddeccontent . RPAREN COLON ID EQ exp 

	RPAREN	shift 150


	.	error


state 135:

	fielddeccontent : fielddec .  (reduce by rule 54)
	fielddeccontent : fielddec . COMMA fielddeccontent 

	COMMA	shift 151


	.	reduce by rule 54


state 136:

	fundec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN RPAREN . EQ exp 

	COLON	shift 153
	EQ	shift 152


	.	error


state 137:

	fielddec : ID . COLON ID 

	COLON	shift 154


	.	error


state 138:

	forexp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 155
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 139:

	ifelseexp : IF exp THEN exp ELSE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 156
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 140:

	nEmptySeq : exp SEMICOLON . nEmptySeq 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 117
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	nEmptySeq	goto 157
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 141:

	subscript : LBRACK exp RBRACK .  (reduce by rule 61)



	.	reduce by rule 61


state 142:

	reccreatecon : fieldcreate COMMA reccreatecon .  (reduce by rule 67)



	.	reduce by rule 67


state 143:

	fieldcreate : ID EQ exp .  (reduce by rule 68)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 68


state 144:

	arrcreate : ID LBRACK exp RBRACK OF . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 158
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 145:

	callexpcon : exp COMMA callexpcon .  (reduce by rule 40)



	.	reduce by rule 40


state 146:

	arrty : ARRAY OF . ID 

	ID	shift 159


	.	error


state 147:

	recty : LBRACE fielddeccontent . RBRACE 

	RBRACE	shift 160


	.	error


state 148:

	recty : LBRACE RBRACE .  (reduce by rule 53)



	.	reduce by rule 53


state 149:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 161
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 150:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN . COLON ID EQ exp 

	COLON	shift 163
	EQ	shift 162


	.	error


state 151:

	fielddeccontent : fielddec COMMA . fielddeccontent 

	ID	shift 137

	fielddec	goto 135
	fielddeccontent	goto 164

	.	error


state 152:

	fundec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 165
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 153:

	fundec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 166


	.	error


state 154:

	fielddec : ID COLON . ID 

	ID	shift 167


	.	error


state 155:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	forexp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 168


	.	error


state 156:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	ifelseexp : IF exp THEN exp ELSE exp .  (reduce by rule 46)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 46


state 157:

	nEmptySeq : exp SEMICOLON nEmptySeq .  (reduce by rule 36)



	.	reduce by rule 36


state 158:

	arrcreate : ID LBRACK exp RBRACK OF exp .  (reduce by rule 63)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 63


state 159:

	arrty : ARRAY OF ID .  (reduce by rule 51)



	.	reduce by rule 51


state 160:

	recty : LBRACE fielddeccontent RBRACE .  (reduce by rule 52)



	.	reduce by rule 52


state 161:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 92)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 92


state 162:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 169
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 163:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN COLON . ID EQ exp 

	ID	shift 170


	.	error


state 164:

	fielddeccontent : fielddec COMMA fielddeccontent .  (reduce by rule 55)



	.	reduce by rule 55


state 165:

	fundec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 90)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 90


state 166:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 171


	.	error


state 167:

	fielddec : ID COLON ID .  (reduce by rule 56)



	.	reduce by rule 56


state 168:

	forexp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 172
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 169:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN EQ exp .  (reduce by rule 87)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 87


state 170:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN COLON ID . EQ exp 

	EQ	shift 173


	.	error


state 171:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 174
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 172:

	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 
	forexp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 43)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 43


state 173:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN COLON ID EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 175
	lvalue	goto 13
	callexp	goto 12
	arrcreate	goto 11
	reccreate	goto 10
	assignment	goto 9
	seqexp	goto 8
	letexp	goto 7
	binop	goto 6
	unaryop	goto 5
	ifexp	goto 4
	ifelseexp	goto 3
	whileexp	goto 2
	forexp	goto 1

	.	error


state 174:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 89)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 89


state 175:

	fundec : FUNCTION ID LPAREN fielddeccontent RPAREN COLON ID EQ exp .  (reduce by rule 88)
	binop : exp . PLUS exp 
	binop : exp . MINUS exp 
	binop : exp . TIMES exp 
	binop : exp . DIVIDE exp 
	binop : exp . CARET exp 
	binop : exp . AND exp 
	binop : exp . OR exp 
	binop : exp . EQ exp 
	binop : exp . NEQ exp 
	binop : exp . LT exp 
	binop : exp . LE exp 
	binop : exp . GT exp 
	binop : exp . GE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	CARET	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 88


state 176:


	EOF	accept


	.	error

575 of 1161 action table entries left after compaction
620 goto table entries
